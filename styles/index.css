@tailwind base;
/* Write your own custom base styles here */

a {
    @apply text-purple-500;
}

blockquote {
    @apply m-2 p-2 bg-gray-100 border-l-2 border-gray-400 text-gray-600;
}

p {
    @apply text-lg;
}

input {
    @apply rounded-md;
}

body {
    @apply font-semibold;
}

b, strong {
    @apply font-bold;
}

@font-face {
    font-family: Marisa;
    font-weight: 300;
    src: url(/fonts/marisa/MarisaLight.woff) format("woff");
}

@font-face {
    font-family: Marisa;
    font-weight: 400;
    src: url(/fonts/marisa/MarisaRegular.woff) format("woff");
}

@font-face {
    font-family: Marisa;
    font-weight: 500;
    src: url(/fonts/marisa/MarisaMedium.woff) format("woff");
}

@font-face {
    font-family: Marisa;
    font-weight: 700;
    src: url(/fonts/marisa/MarisaBold.woff) format("woff");
}

/* Start purging... */

@tailwind components;
/* Stop purging. */

/* Write your own custom component styles here */

.tab-btn {
    @apply text-xl rounded-lg p-3;
}

.tab-btn:focus {
    @apply outline-none;
}

.tab-btn.active {
    @apply bg-gray-200;
}

.image-icon:hover {
    @apply text-gray-500 cursor-pointer;
}

.page {
    @apply text-gray-700 h-screen overflow-y-scroll px-6 pb-12;
}

.btn {
    @apply bg-purple-500 text-gray-100 text-xl rounded-lg px-3 font-bold border-2 border-gray-100;
}

.block {
    @apply relative pl-4 border-b-2 border-transparent;
}

.block.is-over {
    @apply border-blue-300;
}

.block-sidebar-button {
    @apply inline-flex items-center border border-transparent text-gray-500 rounded-full invisible;
}

.block:hover .block-sidebar-button {
    @apply visible;
}

.block-sidebar-button:hover {
    @apply bg-gray-500 text-white visible;
}

.block-sidebar-button:focus {
    @apply outline-none;
}

.ReactModal__Overlay {
    @apply z-40;
}

/* Start purging... */

@tailwind utilities;
/* Stop purging. */

/* Your own custom utilities */

.logo-bg {
    @apply bg-gradient-to-b from-green-400 via-purple-500 to-pink-500 bg-clip-text;
}

/* hex grid inspired by https://github.com/web-tiki/responsive-grid-of-hexagons/blob/css-grid/hexagons.css */

.grid.hex {
}

.grid.hex>* {
    grid-column-end: span 2;
    position: relative;
    visibility: hidden;
    /* fix for jagged edges in FF on hover transition */
    outline: 1px solid transparent;
}

.grid.hex>*::after {
    content: '';
    display: block;
    padding-bottom: 86.602%;
    /* =  100 / tan(60) * 1.5 */
}

.grid.hex>*>* {
    position: absolute;
    width: 100%;
    padding-bottom: 115.470%;
    /* =  width / sin(60) */
    overflow: hidden;
    visibility: hidden;
    outline: 1px solid transparent;
    /* fix for jagged edges in FF on hover transition */
    -webkit-transform: rotate3d(0, 0, 1, -60deg) skewY(30deg);
    -ms-transform: rotate3d(0, 0, 1, -60deg) skewY(30deg);
    transform: rotate3d(0, 0, 1, -60deg) skewY(30deg);
}

.grid.hex>*>* * {
    position: absolute;
    visibility: visible;
    outline: 1px solid transparent;
    /* fix for jagged edges in FF on hover transition */
}

.grid.hex>*>*>* {
    display: block;
    width: 100%;
    height: 100%;
    text-align: center;
    background-color: blue;
    color: #fff;
    overflow: hidden;
    -webkit-transform: skewY(-30deg) rotate3d(0, 0, 1, 60deg);
    -ms-transform: skewY(-30deg) rotate3d(0, 0, 1, 60deg);
    transform: skewY(-30deg) rotate3d(0, 0, 1, 60deg);
}

/* <- 2-1  hexagons per row */

.grid.hex {
    grid-template-columns: repeat(4, 1fr);
    padding-bottom: 11.2%;
}

.grid.hex>*:nth-child(3n+3) {
    /* first hexagon of even rows */
    grid-column-start: 2;
}

@media screen(sm) {
    /* <- 3-2  hexagons per row */
    .grid.hex {
        grid-template-columns: repeat(6, 1fr);
        padding-bottom: 7.4%;
    }
    .grid.hex>*:nth-child(3n+3) {
        grid-column-start: auto;
    }
    .grid.hex>*:nth-child(5n+4) {
        /* first hexagon of even rows */
        grid-column-start: 2;
    }
}

@media screen(md) {
    /* <- 4-3  hexagons per row */
    .grid.hex {
        grid-template-columns: repeat(8, 1fr);
        padding-bottom: 5.5%;
    }
    .grid.hex>*:nth-child(5n+4) {
        grid-column-start: auto;
    }
    .grid.hex>*:nth-child(7n+5) {
        /* first hexagon of even rows */
        grid-column-start: 2;
    }
}

@media screen(lg) {
    /* <- 5-4  hexagons per row */
    .grid.hex {
        padding-bottom: 4.4%;
        grid-template-columns: repeat(10, 1fr);
    }
    .grid.hex>*:nth-child(7n+5) {
        grid-column-start: auto;
    }
    .grid.hex>*:nth-child(9n+6) {
        /* first hexagon of even rows */
        grid-column-start: 2;
    }
}